{"version":3,"sources":["components/Cards/Cards.module.css","images/stay_home_bg.jpg","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","infected","cardTitleInfected","color","gutterBottom","variant","component","start","end","duration","separator","Date","toDateString","cardTitleRecovered","cardTitleDeaths","App","setData","setCountry","initData","image","src","alt","ContentContainer","Cards","ChartContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ecc2659.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1jh7L\",\"infected\":\"Cards_infected__1PS2K\",\"recovered\":\"Cards_recovered__hihnM\",\"deaths\":\"Cards_deaths__2iB0w\",\"cardTitleInfected\":\"Cards_cardTitleInfected__2VMC0\",\"cardTitleRecovered\":\"Cards_cardTitleRecovered__1HVCI\",\"cardTitleDeaths\":\"Cards_cardTitleDeaths__1dxmb\",\"card\":\"Cards_card__3P-Lm\"};","module.exports = __webpack_public_path__ + \"static/media/stay_home_bg.63caf4f8.jpg\";","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: true },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from 'react';\n// import { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\n// import cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n        <div  className={styles.infected}>\n          <div>\n            <div className={styles.cardTitleInfected} color=\"textSecondary\" gutterBottom>\n              Infected\n            </div>\n            <div variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </div>\n            <div color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </div>\n            <div variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </div>\n          </div>\n        </div>\n        <div className={styles.recovered}  >\n          <div>\n            <div className={styles.cardTitleRecovered} color=\"textSecondary\" gutterBottom>\n              Recovered\n            </div>\n            <div variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </div>\n            <div color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </div>\n            <div variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </div>\n          </div>\n        </div>\n        <div className={styles.deaths} >\n          <div>\n            <div className={styles.cardTitleDeaths}  color=\"textSecondary\" gutterBottom>\n              Deaths\n            </div>\n            <div variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </div>\n            <div color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </div>\n            <div variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n};\nexport default Info;\n","import React, { useState,useEffect } from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\nimport fullImage from './images/stay_home_bg.jpg';\n\nconst App = ()=> {\n  const [data,setData] = useState({})\n  const [country,setCountry] = useState('')\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initData = await fetchData();\n      setData(initData);\n    };\n    fetchMyAPI()\n  }, []);\n\n\n  const handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    setData(data);\n    setCountry(country);\n  }\n\n\n  return(\n      <>\n        {/* <img className={styles.fullImage} src={fullImage} alt=\"COVID-19\" /> */}\n        <div className={styles.container}>\n          <img className={styles.image} src={image} alt=\"COVID-19\" />\n          <div className={styles.ContentContainer}>\n            <Cards data={data} />\n            <div className={styles.ChartContainer}>\n              <CountryPicker handleCountryChange={handleCountryChange} />\n              <Chart data={data} country={country} /> \n            </div>\n          </div>\n\n        </div>\n      </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2djko\",\"ContentContainer\":\"App_ContentContainer__3dgly\",\"ChartContainer\":\"App_ChartContainer__1l27Z\",\"image\":\"App_image__SVe9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2NC1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__gy5kr\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}